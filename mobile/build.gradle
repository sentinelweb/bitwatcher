apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "uk.co.sentinelweb.bitwatcher"
        minSdkVersion 21
        targetSdkVersion 26
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "bitstampApiKey", "\"$BITSTAMP_API_KEY\""
        buildConfigField "String", "bitstampSecretKey", "\"$BITSTAMP_SECRET\""
        buildConfigField "String", "bitstampUser", "\"$BITSTAMP_USER\""

        buildConfigField "String", "binanceApiKey", "\"$BINANCE_API_KEY\""
        buildConfigField "String", "binanceSecretKey", "\"$BINANCE_SECRET\""
        buildConfigField "String", "binanceUser", "\"$BINANCE_USER\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

androidExtensions {

    experimental = true
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // project dependencies
    wearApp project(':wear')
    implementation project(':net')
    implementation project(':domain')
    // git clone https://android.googlesource.com/platform/frameworks/opt/colorpicker
    implementation project(':colorpicker')

    // kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //android - support, wear etc
    implementation "com.android.support:appcompat-v7:$android_support"
    implementation "com.android.support:design:$android_support"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout"
    implementation "com.android.support:multidex:$multidex"
    implementation "com.google.android.gms:play-services-wearable:$play_services"
    implementation "android.arch.lifecycle:runtime:$lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_compiler" // seem to be needed by
    kapt "android.arch.lifecycle:compiler:$lifecycle_compiler"
    implementation "com.google.android.gms:play-services-vision:$play_services"

    // room + live data
    implementation "android.arch.persistence.room:runtime:$lifecycle_room"
    kapt "android.arch.persistence.room:compiler:$lifecycle_room"
    testImplementation "android.arch.persistence.room:testing:$lifecycle_room"
    implementation "android.arch.persistence.room:rxjava2:$lifecycle_room"

    // https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxandroid
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //stetho
    implementation "com.facebook.stetho:stetho:$stetho"

    // gson: https://github.com/google/gson/blob/master/UserGuide.md#TOC-Gson-With-Maven
    implementation "com.google.code.gson:gson:$gson_version"

}


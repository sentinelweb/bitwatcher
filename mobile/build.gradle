apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "uk.co.sentinelweb.bitwatcher"
        minSdkVersion 21
        targetSdkVersion 26
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // project dependencies
    wearApp project(':wear')
    implementation project(':net')

    // kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //android - support, wear etc
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:multidex:1.0.2'
    implementation "com.google.android.gms:play-services-wearable:$play_services"
    implementation "android.arch.lifecycle:runtime:$lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_compiler" // seem to be needed by
    kapt "android.arch.lifecycle:compiler:$lifecycle_compiler"
    implementation "com.google.android.gms:play-services-vision:$play_services"

    // room + live data
    implementation "android.arch.persistence.room:runtime:$lifecycle_room"
    kapt "android.arch.persistence.room:compiler:$lifecycle_room"
    testImplementation "android.arch.persistence.room:testing:$lifecycle_room"
    implementation "android.arch.persistence.room:rxjava2:$lifecycle_room"

    // lifecycle - not sure if i'll use these
//    kapt "android.arch.lifecycle:reactivestreams:$lifecycle_room"
//    testImplementation "android.arch.core:core-testing:1.0.0"
//    implementation "android.arch.lifecycle:extensions:$lifecycle_extensions"

    // https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxandroid
    implementation group: 'io.reactivex.rxjava2', name: 'rxandroid', version: '2.0.1'

    // tssting
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // dagger
    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.google.dagger:dagger-android:$dagger_version"
    compile "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
}

